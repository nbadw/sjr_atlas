//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SJRAtlas.CGNS {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("SearchResults")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SearchResults : System.Data.DataSet {
        
        private PlaceNameDataTable tablePlaceName;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SearchResults() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SearchResults(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["PlaceName"] != null)) {
                    base.Tables.Add(new PlaceNameDataTable(ds.Tables["PlaceName"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PlaceNameDataTable PlaceName {
            get {
                return this.tablePlaceName;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            SearchResults cln = ((SearchResults)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PlaceName"] != null)) {
                    base.Tables.Add(new PlaceNameDataTable(ds.Tables["PlaceName"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePlaceName = ((PlaceNameDataTable)(base.Tables["PlaceName"]));
            if ((initTable == true)) {
                if ((this.tablePlaceName != null)) {
                    this.tablePlaceName.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SearchResults";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePlaceName = new PlaceNameDataTable();
            base.Tables.Add(this.tablePlaceName);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePlaceName() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            SearchResults ds = new SearchResults();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void PlaceNameRowChangeEventHandler(object sender, PlaceNameRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PlaceNameDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columngeoname;
            
            private System.Data.DataColumn columnstatus_term;
            
            private System.Data.DataColumn columnlatitude;
            
            private System.Data.DataColumn columnlongitude;
            
            private System.Data.DataColumn columnlatdec;
            
            private System.Data.DataColumn columnlondec;
            
            private System.Data.DataColumn columncoord_acc_m;
            
            private System.Data.DataColumn columnconcise_term;
            
            private System.Data.DataColumn columngeneric_term;
            
            private System.Data.DataColumn columnregion_name;
            
            private System.Data.DataColumn columnnts_map;
            
            private System.Data.DataColumn columndatum;
            
            private System.Data.DataColumn columncgndb_key;
            
            private System.Data.DataColumn columnfeature_id;
            
            private System.Data.DataColumn columnconcise_type;
            
            private System.Data.DataColumn columnlocation;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PlaceNameDataTable() {
                this.TableName = "PlaceName";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PlaceNameDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PlaceNameDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn geonameColumn {
                get {
                    return this.columngeoname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn status_termColumn {
                get {
                    return this.columnstatus_term;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn latitudeColumn {
                get {
                    return this.columnlatitude;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn longitudeColumn {
                get {
                    return this.columnlongitude;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn latdecColumn {
                get {
                    return this.columnlatdec;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn londecColumn {
                get {
                    return this.columnlondec;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn coord_acc_mColumn {
                get {
                    return this.columncoord_acc_m;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn concise_termColumn {
                get {
                    return this.columnconcise_term;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn generic_termColumn {
                get {
                    return this.columngeneric_term;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn region_nameColumn {
                get {
                    return this.columnregion_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nts_mapColumn {
                get {
                    return this.columnnts_map;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn datumColumn {
                get {
                    return this.columndatum;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cgndb_keyColumn {
                get {
                    return this.columncgndb_key;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn feature_idColumn {
                get {
                    return this.columnfeature_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn concise_typeColumn {
                get {
                    return this.columnconcise_type;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn locationColumn {
                get {
                    return this.columnlocation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PlaceNameRow this[int index] {
                get {
                    return ((PlaceNameRow)(this.Rows[index]));
                }
            }
            
            public event PlaceNameRowChangeEventHandler PlaceNameRowChanging;
            
            public event PlaceNameRowChangeEventHandler PlaceNameRowChanged;
            
            public event PlaceNameRowChangeEventHandler PlaceNameRowDeleting;
            
            public event PlaceNameRowChangeEventHandler PlaceNameRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPlaceNameRow(PlaceNameRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PlaceNameRow AddPlaceNameRow(
                        string geoname, 
                        string status_term, 
                        string latitude, 
                        string longitude, 
                        string latdec, 
                        string londec, 
                        string coord_acc_m, 
                        string concise_term, 
                        string generic_term, 
                        string region_name, 
                        string nts_map, 
                        string datum, 
                        string cgndb_key, 
                        string feature_id, 
                        string concise_type, 
                        string location) {
                PlaceNameRow rowPlaceNameRow = ((PlaceNameRow)(this.NewRow()));
                rowPlaceNameRow.ItemArray = new object[] {
                        geoname,
                        status_term,
                        latitude,
                        longitude,
                        latdec,
                        londec,
                        coord_acc_m,
                        concise_term,
                        generic_term,
                        region_name,
                        nts_map,
                        datum,
                        cgndb_key,
                        feature_id,
                        concise_type,
                        location};
                this.Rows.Add(rowPlaceNameRow);
                return rowPlaceNameRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PlaceNameDataTable cln = ((PlaceNameDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PlaceNameDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columngeoname = base.Columns["geoname"];
                this.columnstatus_term = base.Columns["status_term"];
                this.columnlatitude = base.Columns["latitude"];
                this.columnlongitude = base.Columns["longitude"];
                this.columnlatdec = base.Columns["latdec"];
                this.columnlondec = base.Columns["londec"];
                this.columncoord_acc_m = base.Columns["coord_acc_m"];
                this.columnconcise_term = base.Columns["concise_term"];
                this.columngeneric_term = base.Columns["generic_term"];
                this.columnregion_name = base.Columns["region_name"];
                this.columnnts_map = base.Columns["nts_map"];
                this.columndatum = base.Columns["datum"];
                this.columncgndb_key = base.Columns["cgndb_key"];
                this.columnfeature_id = base.Columns["feature_id"];
                this.columnconcise_type = base.Columns["concise_type"];
                this.columnlocation = base.Columns["location"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columngeoname = new System.Data.DataColumn("geoname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngeoname);
                this.columnstatus_term = new System.Data.DataColumn("status_term", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus_term);
                this.columnlatitude = new System.Data.DataColumn("latitude", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlatitude);
                this.columnlongitude = new System.Data.DataColumn("longitude", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlongitude);
                this.columnlatdec = new System.Data.DataColumn("latdec", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlatdec);
                this.columnlondec = new System.Data.DataColumn("londec", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlondec);
                this.columncoord_acc_m = new System.Data.DataColumn("coord_acc_m", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncoord_acc_m);
                this.columnconcise_term = new System.Data.DataColumn("concise_term", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconcise_term);
                this.columngeneric_term = new System.Data.DataColumn("generic_term", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngeneric_term);
                this.columnregion_name = new System.Data.DataColumn("region_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnregion_name);
                this.columnnts_map = new System.Data.DataColumn("nts_map", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnts_map);
                this.columndatum = new System.Data.DataColumn("datum", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndatum);
                this.columncgndb_key = new System.Data.DataColumn("cgndb_key", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncgndb_key);
                this.columnfeature_id = new System.Data.DataColumn("feature_id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfeature_id);
                this.columnconcise_type = new System.Data.DataColumn("concise_type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconcise_type);
                this.columnlocation = new System.Data.DataColumn("location", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocation);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PlaceNameRow NewPlaceNameRow() {
                return ((PlaceNameRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PlaceNameRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PlaceNameRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PlaceNameRowChanged != null)) {
                    this.PlaceNameRowChanged(this, new PlaceNameRowChangeEvent(((PlaceNameRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PlaceNameRowChanging != null)) {
                    this.PlaceNameRowChanging(this, new PlaceNameRowChangeEvent(((PlaceNameRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PlaceNameRowDeleted != null)) {
                    this.PlaceNameRowDeleted(this, new PlaceNameRowChangeEvent(((PlaceNameRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PlaceNameRowDeleting != null)) {
                    this.PlaceNameRowDeleting(this, new PlaceNameRowChangeEvent(((PlaceNameRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePlaceNameRow(PlaceNameRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                SearchResults ds = new SearchResults();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PlaceNameDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PlaceNameRow : System.Data.DataRow {
            
            private PlaceNameDataTable tablePlaceName;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PlaceNameRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePlaceName = ((PlaceNameDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string geoname {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.geonameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'geoname\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.geonameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status_term {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.status_termColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'status_term\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.status_termColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string latitude {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.latitudeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'latitude\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.latitudeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string longitude {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.longitudeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'longitude\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.longitudeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string latdec {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.latdecColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'latdec\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.latdecColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string londec {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.londecColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'londec\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.londecColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coord_acc_m {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.coord_acc_mColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'coord_acc_m\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.coord_acc_mColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string concise_term {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.concise_termColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'concise_term\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.concise_termColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string generic_term {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.generic_termColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'generic_term\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.generic_termColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string region_name {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.region_nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'region_name\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.region_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nts_map {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.nts_mapColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nts_map\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.nts_mapColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string datum {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.datumColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'datum\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.datumColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cgndb_key {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.cgndb_keyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cgndb_key\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.cgndb_keyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string feature_id {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.feature_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'feature_id\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.feature_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string concise_type {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.concise_typeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'concise_type\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.concise_typeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string location {
                get {
                    try {
                        return ((string)(this[this.tablePlaceName.locationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'location\' in table \'PlaceName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePlaceName.locationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgeonameNull() {
                return this.IsNull(this.tablePlaceName.geonameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgeonameNull() {
                this[this.tablePlaceName.geonameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstatus_termNull() {
                return this.IsNull(this.tablePlaceName.status_termColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstatus_termNull() {
                this[this.tablePlaceName.status_termColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslatitudeNull() {
                return this.IsNull(this.tablePlaceName.latitudeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlatitudeNull() {
                this[this.tablePlaceName.latitudeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslongitudeNull() {
                return this.IsNull(this.tablePlaceName.longitudeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlongitudeNull() {
                this[this.tablePlaceName.longitudeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslatdecNull() {
                return this.IsNull(this.tablePlaceName.latdecColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlatdecNull() {
                this[this.tablePlaceName.latdecColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslondecNull() {
                return this.IsNull(this.tablePlaceName.londecColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlondecNull() {
                this[this.tablePlaceName.londecColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscoord_acc_mNull() {
                return this.IsNull(this.tablePlaceName.coord_acc_mColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcoord_acc_mNull() {
                this[this.tablePlaceName.coord_acc_mColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isconcise_termNull() {
                return this.IsNull(this.tablePlaceName.concise_termColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setconcise_termNull() {
                this[this.tablePlaceName.concise_termColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isgeneric_termNull() {
                return this.IsNull(this.tablePlaceName.generic_termColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setgeneric_termNull() {
                this[this.tablePlaceName.generic_termColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isregion_nameNull() {
                return this.IsNull(this.tablePlaceName.region_nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setregion_nameNull() {
                this[this.tablePlaceName.region_nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnts_mapNull() {
                return this.IsNull(this.tablePlaceName.nts_mapColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnts_mapNull() {
                this[this.tablePlaceName.nts_mapColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatumNull() {
                return this.IsNull(this.tablePlaceName.datumColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatumNull() {
                this[this.tablePlaceName.datumColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscgndb_keyNull() {
                return this.IsNull(this.tablePlaceName.cgndb_keyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcgndb_keyNull() {
                this[this.tablePlaceName.cgndb_keyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfeature_idNull() {
                return this.IsNull(this.tablePlaceName.feature_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfeature_idNull() {
                this[this.tablePlaceName.feature_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isconcise_typeNull() {
                return this.IsNull(this.tablePlaceName.concise_typeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setconcise_typeNull() {
                this[this.tablePlaceName.concise_typeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslocationNull() {
                return this.IsNull(this.tablePlaceName.locationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlocationNull() {
                this[this.tablePlaceName.locationColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PlaceNameRowChangeEvent : System.EventArgs {
            
            private PlaceNameRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PlaceNameRowChangeEvent(PlaceNameRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PlaceNameRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591