<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\src\castle\build\net-2.0\debug\Castle.DynamicProxy.Tests.dll" total="85" failures="0" not-run="1" date="2007-09-20" time="12:14:57">
  <environment nunit-version="2.2.8.0" clr-version="2.0.50727.832" os-version="Microsoft Windows NT 5.1.2600 Service Pack 2" platform="Win32NT" cwd="C:\src\castle" machine-name="D65C2FD1" user="nbdata" user-domain="D65C2FD1" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite name="C:\src\castle\build\net-2.0\debug\Castle.DynamicProxy.Tests.dll" success="True" time="3.891" asserts="0">
    <results>
      <test-suite name="Castle" success="True" time="3.859" asserts="0">
        <results>
          <test-suite name="Castle.DynamicProxy" success="True" time="3.859" asserts="0">
            <results>
              <test-suite name="Castle.DynamicProxy.Test" success="True" time="3.859" asserts="0">
                <results>
                  <test-suite name="Castle.DynamicProxy.Test.AccessLevelTestCase" success="True" time="0.172" asserts="0">
                    <results>
                      <test-case name="Castle.DynamicProxy.Test.AccessLevelTestCase.ProtectedConstructor" executed="True" success="True" time="0.156" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.AccessLevelTestCase.ProtectedMethods" executed="True" success="True" time="0.016" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="Castle.DynamicProxy.Test.CachedTypeTestCase" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="Castle.DynamicProxy.Test.CachedTypeTestCase.CachedClassProxies" executed="True" success="True" time="0.016" asserts="4" />
                      <test-case name="Castle.DynamicProxy.Test.CachedTypeTestCase.GenerateProxyClassSameNameDistinctNamespace" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="Castle.DynamicProxy.Test.CachedTypeTestCase.GenerateProxyClassSameNameButOneIsInnerClass" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="Castle.DynamicProxy.Test.CachedTypeTestCase.GenerateProxyOfGenericType" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Castle.DynamicProxy.Test.ClassWithCtorAndVirtualCall" success="True" time="0.172" asserts="0">
                    <results>
                      <test-case name="Castle.DynamicProxy.Test.ClassWithCtorAndVirtualCall.ProxyArrayListICollectionCtor" executed="True" success="True" time="0.172" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Castle.DynamicProxy.Test.DiamondProblem" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Castle.DynamicProxy.Test.DiamondProblem.CreateProxyOfTypeWithMixinCausingDiamondWhenMethodIsNonVirtual" executed="True" success="True" time="0.016" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="Castle.DynamicProxy.Test.DotNet2Tests" success="True" time="0.141" asserts="0">
                    <results>
                      <test-case name="Castle.DynamicProxy.Test.DotNet2Tests.ProxyGenericClass" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="Castle.DynamicProxy.Test.DotNet2Tests.ProxyGenericInterface" executed="True" success="True" time="0.078" asserts="2" />
                      <test-case name="Castle.DynamicProxy.Test.DotNet2Tests.ProxyGenericInterfaceWithTwoGenericParameters" executed="True" success="True" time="0.031" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.DotNet2Tests.ProxyInternalClass" executed="True" success="True" time="0.016" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase" success="True" time="0.188" asserts="0">
                    <results>
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.CreateSimpleType" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.CreateSimpleTypeWithExplicitDefaultConstructor" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.CreateSimpleTypeWithConstructor" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.EmptyMethodReturningVoid" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.EmptyMethodReturningInt" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.MethodCalc" executed="True" success="True" time="0.016" asserts="4" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.FieldsStoreAndLoad" executed="True" success="True" time="0.016" asserts="4" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.MethodInvokingMethod" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.NewInstanceExpression" executed="True" success="True" time="0.016" asserts="3" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.BlockWithLock" executed="True" success="True" time="0.016" asserts="3" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.Conditionals" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.ArrayRefs" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.CreateCallable" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.CreateMoreComplexCallable" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.EmptyMethodWithPrimitiveTypeRefArg" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.EmptyMethodWithReferenceTypeRefArg" executed="True" success="True" time="0.016" asserts="5" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.EmptyMethodWithStructTypeRefArg" executed="True" success="True" time="0.016" asserts="6" />
                      <test-case name="Castle.DynamicProxy.Test.EasyTypeBuilderTestCase.EmptyMethodWithEnumTypeRefArg" executed="True" success="True" time="0.000" asserts="6" />
                    </results>
                  </test-suite>
                  <test-suite name="Castle.DynamicProxy.Test.ExplicitImplementationOfISerializable" success="True" time="0.094" asserts="0">
                    <results>
                      <test-case name="Castle.DynamicProxy.Test.ExplicitImplementationOfISerializable.CreateClassThatImplementISerializable" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.ExplicitImplementationOfISerializable.SimpleProxySerialization" executed="True" success="True" time="0.031" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.ExplicitImplementationOfISerializable.ProxySerializationWhileOverridingExplicitInterface" executed="True" success="True" time="0.031" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.ExplicitImplementationOfISerializable.ExplicitISerializeDoes_NOT_CallToBaseImplementation" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Castle.DynamicProxy.Test.MethodInvocationTargetTestCase" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="Castle.DynamicProxy.Test.MethodInvocationTargetTestCase.AttributesOnTargetClasses" executed="True" success="True" time="0.016" asserts="8" />
                      <test-case name="Castle.DynamicProxy.Test.MethodInvocationTargetTestCase.AttributesOnTargetClassesWithInterfaceProxy" executed="True" success="True" time="0.031" asserts="8" />
                    </results>
                  </test-suite>
                  <test-suite name="Castle.DynamicProxy.Test.MethodsWithAttributesOnParameters" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="Castle.DynamicProxy.Test.MethodsWithAttributesOnParameters.ParametersAreCopiedToProxiedObject" executed="True" success="True" time="0.016" asserts="0" />
                      <test-case name="Castle.DynamicProxy.Test.MethodsWithAttributesOnParameters.CanGetParameterAttributeFromProxiedObject" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Castle.DynamicProxy.Test.MixinTestCase" success="True" time="0.063" asserts="0">
                    <categories>
                      <category name="DotNetOnly" />
                    </categories>
                    <results>
                      <test-case name="Castle.DynamicProxy.Test.MixinTestCase.SimpleMixin" executed="True" success="True" time="0.016" asserts="8" />
                      <test-case name="Castle.DynamicProxy.Test.MixinTestCase.TwoMixins" executed="True" success="True" time="0.016" asserts="13" />
                      <test-case name="Castle.DynamicProxy.Test.MixinTestCase.MixinImplementingMoreThanOneInterface" executed="True" success="True" time="0.016" asserts="15" />
                      <test-case name="Castle.DynamicProxy.Test.MixinTestCase.MixinForInterfaces" executed="True" success="True" time="0.016" asserts="8" />
                    </results>
                  </test-suite>
                  <test-suite name="Castle.DynamicProxy.Test.MultithreadTestCase" success="True" time="2.016" asserts="0">
                    <results>
                      <test-case name="Castle.DynamicProxy.Test.MultithreadTestCase.MultithreadTest" executed="True" success="True" time="2.016" asserts="3835" />
                    </results>
                  </test-suite>
                  <test-suite name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase" success="True" time="0.594" asserts="0">
                    <results>
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyForClass" executed="True" success="True" time="0.016" asserts="4" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyForClassWithInterfaces" executed="True" success="True" time="0.016" asserts="5" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyForClassWithSuperClass" executed="True" success="True" time="0.016" asserts="6" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyForClassWhichImplementsInterfaces" executed="True" success="True" time="0.016" asserts="4" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyingClassWithoutVirtualMethods" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyingClassWithSealedMethods" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.HashtableProxy" executed="True" success="True" time="0.031" asserts="3" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.CreateClassProxyInvalidBaseClass" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.CreateClassProxyNullBaseClass" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.CreateClassProxyNullInterceptor" executed="True" success="True" time="0.016" asserts="0" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.TestGenerationSimpleInterface" executed="True" success="True" time="0.016" asserts="5" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.UsingCache" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.TestGenerationWithInterfaceHeritage" executed="True" success="True" time="0.016" asserts="6" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ClassWithConstructors" executed="True" success="True" time="0.016" asserts="6" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.TestEnumProperties" executed="True" success="True" time="0.016" asserts="4" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.TestAttributesForInterfaceProxies" executed="True" success="True" time="0.016" asserts="4" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyForClassWithGuidProperty" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyingClassWithSByteEnum" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyForMarshalByRefClass" executed="True" success="True" time="0.016" asserts="3" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyForRefAndOutClassWithPrimitiveTypeParams" executed="True" success="True" time="0.031" asserts="6">
                        <categories>
                          <category name="DotNetOnly" />
                        </categories>
                      </test-case>
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyForRefAndOutClassWithReferenceTypeParams" executed="True" success="True" time="0.016" asserts="4">
                        <categories>
                          <category name="DotNetOnly" />
                        </categories>
                      </test-case>
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyForRefAndOutClassWithStructTypeParams" executed="True" success="True" time="0.016" asserts="4">
                        <categories>
                          <category name="DotNetOnly" />
                        </categories>
                      </test-case>
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyForRefAndOutClassWithEnumTypeParams" executed="True" success="True" time="0.016" asserts="4">
                        <categories>
                          <category name="DotNetOnly" />
                        </categories>
                      </test-case>
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyForRefAndOutClassWithPrimitiveTypeParamsWhereInterceptorModifiesTheValues" executed="True" success="True" time="0.031" asserts="4">
                        <categories>
                          <category name="DotNetOnly" />
                        </categories>
                      </test-case>
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyForRefAndOutClassWithReferenceTypeParamsWhereInterceptorModifiesTheValues" executed="True" success="True" time="0.016" asserts="4">
                        <categories>
                          <category name="DotNetOnly" />
                        </categories>
                      </test-case>
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyForRefAndOutClassWithStructTypeParamsWhereInterceptorModifiesTheValues" executed="True" success="True" time="0.016" asserts="4">
                        <categories>
                          <category name="DotNetOnly" />
                        </categories>
                      </test-case>
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProxyForRefAndOutClassWithEnumTypeParamsWhereInterceptorModifiesTheValues" executed="True" success="True" time="0.016" asserts="4">
                        <categories>
                          <category name="DotNetOnly" />
                        </categories>
                      </test-case>
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ProtectedProperties" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.Indexer" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.Indexer2" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.ReflectionTest" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.MethodsAreInterceptedInChain" executed="True" success="True" time="0.016" asserts="5" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.NameBugReportedTest" executed="True" success="True" time="0.016" asserts="0" />
                      <test-case name="Castle.DynamicProxy.Test.ProxyGeneratorTestCase.IDataReaderProxyGeneration" executed="True" success="True" time="0.078" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="Castle.DynamicProxy.Test.ProxyingAbstractClass" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Castle.DynamicProxy.Test.ProxyingAbstractClass.ProxyAnAbstractClass" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Castle.DynamicProxy.Test.SerializableClassTestCase" success="True" time="0.250" asserts="0">
                    <results>
                      <test-case name="Castle.DynamicProxy.Test.SerializableClassTestCase.CreateSerializable" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.SerializableClassTestCase.SimpleProxySerialization" executed="True" success="True" time="0.031" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.SerializableClassTestCase.SerializationDelegate" executed="True" success="True" time="0.031" asserts="1" />
                      <test-case name="Castle.DynamicProxy.Test.SerializableClassTestCase.SimpleInterfaceProxy" executed="True" success="True" time="0.031" asserts="5" />
                      <test-case name="Castle.DynamicProxy.Test.SerializableClassTestCase.CustomMarkerInterface" executed="True" success="True" time="0.063" asserts="3" />
                      <test-case name="Castle.DynamicProxy.Test.SerializableClassTestCase.MixinSerialization" executed="True" success="True" time="0.031" asserts="5">
                        <categories>
                          <category name="DotNetOnly" />
                        </categories>
                      </test-case>
                      <test-case name="Castle.DynamicProxy.Test.SerializableClassTestCase.XmlSerialization" executed="False">
                        <reason>
                          <message><![CDATA[XmlSerializer does not respect the ObjectReference protocol so it wont work]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Castle.DynamicProxy.Test.SerializableClassTestCase.HashtableSerialization" executed="True" success="True" time="0.047" asserts="3" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>